2024-09-09 22:10:16,407 - INFO - Starting the training script.
2024-09-09 22:10:16,407 - INFO - Saved training CSV to ObjectDetection/Training/Results/results7.
2024-09-09 22:10:16,409 - INFO - Processing training instances.
2024-09-09 22:10:16,410 - INFO - Processing row 0 with model yolo8n.
2024-09-09 22:10:16,410 - ERROR - Error training yolo8n: Yolo8.__init__() got an unexpected keyword argument 'model_size'
2024-09-09 22:10:16,410 - INFO - Processing row 1 with model yolo8s.
2024-09-09 22:10:16,410 - ERROR - Error training yolo8s: Yolo8.__init__() got an unexpected keyword argument 'model_size'
2024-09-09 22:10:16,410 - INFO - Processing row 2 with model yolo8m.
2024-09-09 22:10:16,410 - ERROR - Error training yolo8m: Yolo8.__init__() got an unexpected keyword argument 'model_size'
2024-09-09 22:10:16,410 - INFO - Processing row 3 with model yolo8m.
2024-09-09 22:10:16,410 - ERROR - Error training yolo8m: Yolo8.__init__() got an unexpected keyword argument 'model_size'
2024-09-09 22:10:16,410 - INFO - Processing row 4 with model yolo5s.
2024-09-09 22:10:35,060 - ERROR - Error training yolo5s: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 3.81 GiB of which 4.44 MiB is free. Including non-PyTorch memory, this process has 3.75 GiB memory in use. Of the allocated memory 3.60 GiB is allocated by PyTorch, and 53.34 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
2024-09-09 22:10:35,491 - INFO - Processing row 5 with model yolo5m.
2024-09-09 22:10:56,210 - ERROR - Error training yolo5m: CUDA out of memory. Tried to allocate 26.00 MiB. GPU 0 has a total capacity of 3.81 GiB of which 18.44 MiB is free. Including non-PyTorch memory, this process has 3.74 GiB memory in use. Of the allocated memory 3.54 GiB is allocated by PyTorch, and 101.10 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
2024-09-09 22:10:56,674 - INFO - Processing row 6 with model yolo5l.
2024-09-09 22:12:43,138 - ERROR - Error training yolo5l: CUDA out of memory. Tried to allocate 14.00 MiB. GPU 0 has a total capacity of 3.81 GiB of which 8.44 MiB is free. Including non-PyTorch memory, this process has 3.75 GiB memory in use. Of the allocated memory 3.56 GiB is allocated by PyTorch, and 94.57 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
2024-09-09 22:12:43,157 - INFO - Processing row 7 with model mega5.
